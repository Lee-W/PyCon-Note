<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyCon Note - PyCon JP 2019</title><link href="https://lee-w.github.io/pycon-note/" rel="alternate"></link><link href="https://lee-w.github.io/pycon-note/feeds/pycon-jp-2019.atom.xml" rel="self"></link><id>https://lee-w.github.io/pycon-note/</id><updated>2019-10-02T16:20:00+08:00</updated><entry><title>Modern development environments for Pythonistas</title><link href="https://lee-w.github.io/pycon-note/posts/pycon-jp-2019/2019/10/modern-development-environments-for-pythonistas" rel="alternate"></link><published>2019-10-02T16:20:00+08:00</published><updated>2019-10-02T16:20:00+08:00</updated><author><name>Lee-W</name></author><id>tag:lee-w.github.io,2019-10-02:/pycon-note/posts/pycon-jp-2019/2019/10/modern-development-environments-for-pythonistas</id><summary type="html">&lt;h2 id="material"&gt;Material&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=d3cj4f63u-A"&gt;video&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="note"&gt;Note&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Speaker&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Dustin Ingram (&lt;a href="https://twitter.com/di_codes"&gt;twitter&lt;/a&gt;)&lt;ul&gt;
&lt;li&gt;Organize PyTexas&lt;/li&gt;
&lt;li&gt;PyPi contributor&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Topics&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;dev, test env&lt;/li&gt;
&lt;li&gt;dependency workflows&lt;/li&gt;
&lt;li&gt;linting &amp;amp; autoformatting&lt;/li&gt;
&lt;li&gt;go to prod&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Focus: anything that's not code and will be check into code base&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="dev-test-environment"&gt;dev, test environment&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Your development environment.&lt;br&gt;
"But it works on my machine"&lt;/p&gt;
&lt;p&gt;You laptop is not …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;h2 id="material"&gt;Material&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=d3cj4f63u-A"&gt;video&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="note"&gt;Note&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Speaker&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Dustin Ingram (&lt;a href="https://twitter.com/di_codes"&gt;twitter&lt;/a&gt;)&lt;ul&gt;
&lt;li&gt;Organize PyTexas&lt;/li&gt;
&lt;li&gt;PyPi contributor&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Topics&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;dev, test env&lt;/li&gt;
&lt;li&gt;dependency workflows&lt;/li&gt;
&lt;li&gt;linting &amp;amp; autoformatting&lt;/li&gt;
&lt;li&gt;go to prod&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Focus: anything that's not code and will be check into code base&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="dev-test-environment"&gt;dev, test environment&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Your development environment.&lt;br&gt;
"But it works on my machine"&lt;/p&gt;
&lt;p&gt;You laptop is not production.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Problem: &lt;code&gt;virtualenv&lt;/code&gt; only isolate Python. Platform-level stuff are still shared.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fully isolate a reproducible environments&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;containerization (e.g., docker)&lt;ul&gt;
&lt;li&gt;Dockerfile&lt;/li&gt;
&lt;li&gt;docker-compose&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="a-modern-workflow-for-dependencies"&gt;A modern workflow for dependencies&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Problems: When install a new package and it depends on newer version of old dependency, it might upgrade unnoticeably.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Don't &lt;code&gt;pip freeze &amp;gt; requirements.txt&lt;/code&gt; anymore&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Bad&lt;ul&gt;
&lt;li&gt;Get everything from your system&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Good&lt;ul&gt;
&lt;li&gt;Version pinning&lt;/li&gt;
&lt;li&gt;Managing sub-dependencies&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="pip-tools"&gt;pip-tools&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/jazzband/pip-tools/"&gt;pip-tools&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pin and compile the dependencies and sub-dependencies&lt;br&gt;
&lt;code&gt;sh
    pip-compile requirements.in&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Pinning and compiling only get 90%&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Artifact hashing&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pip compile --generate-hashes requirements.in&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pip install --require-hashes -r requirements.txt&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Now our deps are 100% frozen&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="when-how-to-upgrade-dependencies"&gt;When / How to upgrade dependencies&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;When: early and often&lt;/li&gt;
&lt;li&gt;How: automated dependency services → scan you repo and see your deps &lt;ul&gt;
&lt;li&gt;&lt;a href="https://pyup.io"&gt;pyup.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dependabot.com"&gt;dependabot&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="linting-and-autoformatting"&gt;Linting and autoformatting&lt;/h2&gt;
&lt;p&gt;Use &lt;a href="https://github.com/ambv/black"&gt;black&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="taking-your-env-to-prod"&gt;Taking your env to prod&lt;/h2&gt;
&lt;p&gt;Through services that supports deployment through container&lt;/p&gt;
&lt;h2 id="conclusion"&gt;Conclusion&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Use docker&lt;/li&gt;
&lt;li&gt;Use docker-compose&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;pip-compile&lt;/code&gt; from &lt;code&gt;pip-tools&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Use &lt;a href="https://dependabot.com"&gt;dependabot&lt;/a&gt; / &lt;a href="https://pyup.io"&gt;pyup.io&lt;/a&gt;&lt;br&gt;
 for auto-upgrade deps&lt;/li&gt;
&lt;li&gt;Use &lt;a href="https://dependabot.com"&gt;dependabot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Deploy your docker container to prod&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="q-a"&gt;Q &amp;amp; A&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Q: pipenv, poetry or pip-tools&lt;ul&gt;
&lt;li&gt;A: Personal perference&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="best practices"></category></entry></feed>