<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyCon Note - PyCon CA 2019</title><link href="https://lee-w.github.io/pycon-note/" rel="alternate"></link><link href="https://lee-w.github.io/pycon-note/feeds/pycon-ca-2019.atom.xml" rel="self"></link><id>https://lee-w.github.io/pycon-note/</id><updated>2019-12-23T15:48:00+08:00</updated><entry><title>How to Level Up</title><link href="https://lee-w.github.io/pycon-note/posts/pycon-ca-2019/2019/12/how-to-level-up" rel="alternate"></link><published>2019-12-23T15:48:00+08:00</published><updated>2019-12-23T15:48:00+08:00</updated><author><name>Lee-W</name></author><id>tag:lee-w.github.io,2019-12-23:/pycon-note/posts/pycon-ca-2019/2019/12/how-to-level-up</id><summary type="html">&lt;h2 id="speaker"&gt;Speaker&lt;/h2&gt;
&lt;p&gt;Leta Montopoli&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/lmontopo"&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="material"&gt;Material&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/lmontopo/HowToLevelUp/blob/master/HowToLevelUp.pdf"&gt;slide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="note"&gt;Note&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Be Curious&lt;ul&gt;
&lt;li&gt;What curiosity looks like&lt;ul&gt;
&lt;li&gt;ask question ← showing not ok with not understanding&lt;/li&gt;
&lt;li&gt;be open to learning from anyone&lt;/li&gt;
&lt;li&gt;contemplate if there is a better way&lt;/li&gt;
&lt;li&gt;focus on learning goals&lt;/li&gt;
&lt;li&gt;learn about the tools you use&lt;/li&gt;
&lt;li&gt;experimenting&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Be Brave&lt;ul&gt;
&lt;li&gt;When you get …&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;h2 id="speaker"&gt;Speaker&lt;/h2&gt;
&lt;p&gt;Leta Montopoli&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/lmontopo"&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="material"&gt;Material&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/lmontopo/HowToLevelUp/blob/master/HowToLevelUp.pdf"&gt;slide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="note"&gt;Note&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Be Curious&lt;ul&gt;
&lt;li&gt;What curiosity looks like&lt;ul&gt;
&lt;li&gt;ask question ← showing not ok with not understanding&lt;/li&gt;
&lt;li&gt;be open to learning from anyone&lt;/li&gt;
&lt;li&gt;contemplate if there is a better way&lt;/li&gt;
&lt;li&gt;focus on learning goals&lt;/li&gt;
&lt;li&gt;learn about the tools you use&lt;/li&gt;
&lt;li&gt;experimenting&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Be Brave&lt;ul&gt;
&lt;li&gt;When you get that nervous / excited feeling in your stomach, that's a sign you gotta continue.&lt;/li&gt;
&lt;li&gt;What bravery looks like&lt;ul&gt;
&lt;li&gt;Volunteer for things that scare you&lt;/li&gt;
&lt;li&gt;Teach others, even if you aren't an "expert"&lt;/li&gt;
&lt;li&gt;ask basic and dumb questions&lt;/li&gt;
&lt;li&gt;read things you don't understand&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Be Dissatisfied&lt;ul&gt;
&lt;li&gt;What dissatisfaction looks like&lt;ul&gt;
&lt;li&gt;Hunting for inefficiencies&lt;/li&gt;
&lt;li&gt;Have pet projects&lt;/li&gt;
&lt;li&gt;Make thins faster&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Be reflective&lt;ul&gt;
&lt;li&gt;Bing reflective helps us learn through experience&lt;/li&gt;
&lt;li&gt;What being reflective looks like&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Journal everyday&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Learn from your successes and your failures&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="Learning"></category></entry><entry><title>My Favourite Errors - Tales From The Ops Side</title><link href="https://lee-w.github.io/pycon-note/posts/pycon-ca-2019/2019/12/my-favourite-errors" rel="alternate"></link><published>2019-12-23T11:48:00+08:00</published><updated>2019-12-23T11:48:00+08:00</updated><author><name>Lee-W</name></author><id>tag:lee-w.github.io,2019-12-23:/pycon-note/posts/pycon-ca-2019/2019/12/my-favourite-errors</id><summary type="html">&lt;h2 id="speaker"&gt;Speaker&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://twitter.com/iHandroid"&gt;Hany Fahim&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://devopsdays.org/events/2019-toronto/program/hany-fahim"&gt;His talk in devops day&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="note"&gt;Note&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Errors are a part of the job&lt;/li&gt;
&lt;li&gt;Various Network related errors&lt;ul&gt;
&lt;li&gt;TCP usually easier&lt;/li&gt;
&lt;li&gt;HTTP not that easy to debug&lt;ul&gt;
&lt;li&gt;A lots of HTTP error&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;No errors &amp;lt; timeout errors &amp;lt; other errors&lt;/li&gt;
&lt;/ul&gt;</summary><content type="html">&lt;h2 id="speaker"&gt;Speaker&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://twitter.com/iHandroid"&gt;Hany Fahim&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://devopsdays.org/events/2019-toronto/program/hany-fahim"&gt;His talk in devops day&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="note"&gt;Note&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Errors are a part of the job&lt;/li&gt;
&lt;li&gt;Various Network related errors&lt;ul&gt;
&lt;li&gt;TCP usually easier&lt;/li&gt;
&lt;li&gt;HTTP not that easy to debug&lt;ul&gt;
&lt;li&gt;A lots of HTTP error&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;No errors &amp;lt; timeout errors &amp;lt; other errors&lt;/li&gt;
&lt;/ul&gt;</content><category term="WIP"></category><category term="Web"></category></entry><entry><title>PySpark: avoiding common pitfalls and keeping your sanity</title><link href="https://lee-w.github.io/pycon-note/posts/pycon-ca-2019/2019/12/pyspark-avoiding-common-pitfalls-and-keeping-your-sanity" rel="alternate"></link><published>2019-12-23T11:48:00+08:00</published><updated>2019-12-23T11:48:00+08:00</updated><author><name>Lee-W</name></author><id>tag:lee-w.github.io,2019-12-23:/pycon-note/posts/pycon-ca-2019/2019/12/pyspark-avoiding-common-pitfalls-and-keeping-your-sanity</id><summary type="html">&lt;h2 id="speaker"&gt;Speaker&lt;/h2&gt;
&lt;p&gt;Jonathan&lt;/p&gt;
&lt;h2 id="note"&gt;Note&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;25 minutes of sanity&lt;ol&gt;
&lt;li&gt;Improving code readability&lt;/li&gt;
&lt;li&gt;Understand the type dichotomy&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Readability&lt;ul&gt;
&lt;li&gt;Pipelining in PySpark via method chaining&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Types dichotomy&lt;ul&gt;
&lt;li&gt;Prefer using &lt;code&gt;IntegerType()&lt;/code&gt; or &lt;code&gt;LongType()&lt;/code&gt; when dealing with integers&lt;ul&gt;
&lt;li&gt;unless you have a (very) good reason not to&lt;/li&gt;
&lt;li&gt;and are willing to test for overflow&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Take the …&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;h2 id="speaker"&gt;Speaker&lt;/h2&gt;
&lt;p&gt;Jonathan&lt;/p&gt;
&lt;h2 id="note"&gt;Note&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;25 minutes of sanity&lt;ol&gt;
&lt;li&gt;Improving code readability&lt;/li&gt;
&lt;li&gt;Understand the type dichotomy&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Readability&lt;ul&gt;
&lt;li&gt;Pipelining in PySpark via method chaining&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Types dichotomy&lt;ul&gt;
&lt;li&gt;Prefer using &lt;code&gt;IntegerType()&lt;/code&gt; or &lt;code&gt;LongType()&lt;/code&gt; when dealing with integers&lt;ul&gt;
&lt;li&gt;unless you have a (very) good reason not to&lt;/li&gt;
&lt;li&gt;and are willing to test for overflow&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Take the time to "type" your columns&lt;/li&gt;
&lt;li&gt;Use API doc to know the required type of the column&lt;ul&gt;
&lt;li&gt;It's usually provided in the function description&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Use Python's typing and PySpark's return type for UDFs&lt;/li&gt;
&lt;li&gt;Prefer schema-full data format(Parquet, Avro, ORC), avoid share CSV internally&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Q &amp;amp; A&lt;ul&gt;
&lt;li&gt;Would you recommend using pyspark in small scale (e.g., a few GBs)?&lt;ul&gt;
&lt;li&gt;Won't recommend.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="WIP"></category><category term="Spark"></category></entry><entry><title>Understanding autistic children using BioSensors and Python!</title><link href="https://lee-w.github.io/pycon-note/posts/pycon-ca-2019/2019/12/understanding-autistic-children-using-bioSensors-and-python" rel="alternate"></link><published>2019-12-23T11:48:00+08:00</published><updated>2019-12-23T11:48:00+08:00</updated><author><name>Lee-W</name></author><id>tag:lee-w.github.io,2019-12-23:/pycon-note/posts/pycon-ca-2019/2019/12/understanding-autistic-children-using-bioSensors-and-python</id><summary type="html">&lt;h2 id="speaker"&gt;Speaker&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://twitter.com/nihaaarika"&gt;Niharika Krishnan&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://in.pycon.org/cfp/posters-2019/proposals/autiglove-understanding-autistic-children-using-biosensors-and-python~b25Pa/"&gt;Her talk in PyCon India&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="note"&gt;Note&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Emotion Recognition&lt;ul&gt;
&lt;li&gt;How others do?&lt;ul&gt;
&lt;li&gt;Facial&lt;/li&gt;
&lt;li&gt;Speech&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Both does not work for autism&lt;ul&gt;
&lt;li&gt;Facial: Difficulty in expressing&lt;/li&gt;
&lt;li&gt;Speech: Cannot be control&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Why not physiological signal → AutiGlove&lt;ul&gt;
&lt;li&gt;BioSensors → Capture Signal&lt;ul&gt;
&lt;li&gt;Galvanic Skin Response&lt;/li&gt;
&lt;li&gt;Pulse Sensor&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Experiment&lt;ul&gt;
&lt;li&gt;Play Emotional Video&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://biosppy.readthedocs.io/en/stable/"&gt;BioSPPy&lt;/a&gt;: BioSingal Processing …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;h2 id="speaker"&gt;Speaker&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://twitter.com/nihaaarika"&gt;Niharika Krishnan&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://in.pycon.org/cfp/posters-2019/proposals/autiglove-understanding-autistic-children-using-biosensors-and-python~b25Pa/"&gt;Her talk in PyCon India&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="note"&gt;Note&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Emotion Recognition&lt;ul&gt;
&lt;li&gt;How others do?&lt;ul&gt;
&lt;li&gt;Facial&lt;/li&gt;
&lt;li&gt;Speech&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Both does not work for autism&lt;ul&gt;
&lt;li&gt;Facial: Difficulty in expressing&lt;/li&gt;
&lt;li&gt;Speech: Cannot be control&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Why not physiological signal → AutiGlove&lt;ul&gt;
&lt;li&gt;BioSensors → Capture Signal&lt;ul&gt;
&lt;li&gt;Galvanic Skin Response&lt;/li&gt;
&lt;li&gt;Pulse Sensor&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Experiment&lt;ul&gt;
&lt;li&gt;Play Emotional Video&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://biosppy.readthedocs.io/en/stable/"&gt;BioSPPy&lt;/a&gt;: BioSingal Processing in Python&lt;/li&gt;
&lt;li&gt;Q &amp;amp; A&lt;ul&gt;
&lt;li&gt;How many people work on it?&lt;ul&gt;
&lt;li&gt;Team of 2 computer science students&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="WIP"></category><category term="Machine Learning"></category></entry></feed>